name: Terraform CI/CD

on:
  push:
    branches:
      - cloudstorage

permissions:
  contents: write
  deployments: write # Required for environment approvals

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    env:
      TF_ROOT: terraform/cloudstorage
      GOOGLE_CREDENTIALS: ${{ secrets.GKE_SA_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}

      - name: Terraform Init
        working-directory: ${{ env.TF_ROOT }}
        run: |
          BUCKET_NAME="${{ vars.TF_BUCKET }}"
          if [ -z "${BUCKET_NAME}" ]; then
            BUCKET_NAME="${{ secrets.TF_BUCKET }}"
          fi
          echo "Using bucket: ${BUCKET_NAME}"
          terraform init -backend-config="bucket=${BUCKET_NAME}" \
                         -backend-config="prefix=terraform-state" \
                         -reconfigure

      - name: Terraform Plan (Staging)
        working-directory: ${{ env.TF_ROOT }}
        run: terraform plan -var-file="environments/us-east4/env_stage.tfvars"

      - name: Terraform Plan (Production)
        working-directory: ${{ env.TF_ROOT }}
        run: terraform plan -var-file="environments/us-east4/env_prod.tfvars"

  terraform-apply-staging:
    name: Terraform Apply - Staging
    runs-on: ubuntu-latest
    needs: terraform-plan
    environment:
      name: staging
      url: https://console.cloud.google.com/storage/browser
    env:
      TF_ROOT: terraform/cloudstorage
      GOOGLE_CREDENTIALS: ${{ secrets.GKE_SA_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}

      - name: Terraform Init
        working-directory: ${{ env.TF_ROOT }}
        run: |
          BUCKET_NAME="${{ vars.TF_BUCKET }}"
          if [ -z "${BUCKET_NAME}" ]; then
            BUCKET_NAME="${{ secrets.TF_BUCKET }}"
          fi
          echo "Using bucket: ${BUCKET_NAME}"
          terraform init -backend-config="bucket=${BUCKET_NAME}" \
                         -backend-config="prefix=terraform-state" \
                         -reconfigure

      - name: Terraform Apply (Staging)
        working-directory: ${{ env.TF_ROOT }}
        run: terraform apply -auto-approve -var-file="environments/us-east4/env_stage.tfvars"

  terraform-apply-production:
    name: Terraform Apply - Production
    runs-on: ubuntu-latest
    needs: terraform-apply-staging
    environment:
      name: production # Forces another manual approval for production
      url: https://console.cloud.google.com/storage/browser
    env:
      TF_ROOT: terraform/cloudstorage
      GOOGLE_CREDENTIALS: ${{ secrets.GKE_SA_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}

      - name: Terraform Init
        working-directory: ${{ env.TF_ROOT }}
        run: |
          BUCKET_NAME="${{ vars.TF_BUCKET }}"
          if [ -z "${BUCKET_NAME}" ]; then
            BUCKET_NAME="${{ secrets.TF_BUCKET }}"
          fi
          echo "Using bucket: ${BUCKET_NAME}"
          terraform init -backend-config="bucket=${BUCKET_NAME}" \
                         -backend-config="prefix=terraform-state" \
                         -reconfigure

      - name: Terraform Apply (Production)
        working-directory: ${{ env.TF_ROOT }}
        run: terraform apply -auto-approve -var-file="environments/us-east4/env_prod.tfvars"
