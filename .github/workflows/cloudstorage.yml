name: Terraform CI/CD
on:
  push:
    branches:
      - cloudstorage
  pull_request:
    branches:
      - cloudstorage

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    env:
      TF_ROOT: terraform/cloudstorage
      GOOGLE_CREDENTIALS: ${{ secrets.GKE_SA_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
      
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}
      
      - name: Verify Terraform State Bucket
        run: |
          if [ -z "${{ secrets.TF_BUCKET }}" ]; then
            echo "Error: TF_BUCKET secret is not set"
            exit 1
          fi
          echo "Using Terraform state bucket: ${{ secrets.TF_BUCKET }}"
      
      - name: Verify Terraform State Bucket
        run: |
          if [ -z "${{ secrets.TF_BUCKET }}" ]; then
            echo "Error: TF_BUCKET secret is not set"
            exit 1
          fi
          echo "Using Terraform state bucket: ${{ secrets.TF_BUCKET }}"
      
      - name: Terraform Init
        working-directory: ${{ env.TF_ROOT }}
        env:
          TF_BUCKET: ${{ secrets.TF_BUCKET }}
        run: terraform init -backend-config="bucket=${TF_BUCKET}" -backend-config="prefix=terraform-state"
      
      - name: Terraform Plan (Staging)
        if: github.event_name == 'pull_request'
        working-directory: ${{ env.TF_ROOT }}
        run: terraform plan -var-file="environments/us-east4/env_stage.tfvars"
      
      - name: Terraform Plan (Production)
        if: github.event_name == 'push' && github.ref == 'refs/heads/cloudstorage'
        working-directory: ${{ env.TF_ROOT }}
        run: terraform plan -var-file="environments/us-east4/env_prod.tfvars"

  manual-approval:
    name: Require Manual Approval
    runs-on: ubuntu-latest
    needs: terraform-plan
    if: github.event_name == 'push' && github.ref == 'refs/heads/cloudstorage'
    steps:
      - name: Await approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: gautam-prashant
          instructions: "Approve to deploy changes to Production."

  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: manual-approval
    if: github.event_name == 'push' && github.ref == 'refs/heads/cloudstorage'
    env:
      TF_ROOT: terraform/cloudstorage
      GOOGLE_CREDENTIALS: ${{ secrets.GKE_SA_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
      
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}
      
      - name: Terraform Init
        working-directory: ${{ env.TF_ROOT }}
        env:
          TF_BUCKET: ${{ secrets.TF_BUCKET }}
        run: terraform init -backend-config="bucket=${TF_BUCKET}" -backend-config="prefix=terraform-state"
      
      - name: Terraform Apply
        working-directory: ${{ env.TF_ROOT }}
        run: terraform apply -auto-approve -var-file="environments/us-east4/env_prod.tfvars"
