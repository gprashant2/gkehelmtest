name: Terraform CI/CD

on:
  push:
    branches:
      - cloudstorage
      - cloudstoragestage

permissions:
  contents: write
  issues: write

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    env:
      TF_ROOT: terraform/cloudstorage
      GOOGLE_CREDENTIALS: ${{ secrets.GKE_SA_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}

      - name: Verify Terraform State Bucket
        run: |
          if [ -z "${{ vars.TF_BUCKET }}" ]; then
            echo "Error: TF_BUCKET variable is not set"
            exit 1
          fi
          echo "Using Terraform state bucket: ${{ vars.TF_BUCKET }}"

      - name: Terraform Init
        working-directory: ${{ env.TF_ROOT }}
        run: |
          BUCKET_NAME="${{ vars.TF_BUCKET }}"
          if [ -z "${BUCKET_NAME}" ]; then
            BUCKET_NAME="${{ secrets.TF_BUCKET }}"
          fi
          echo "Using bucket: ${BUCKET_NAME}"
          terraform init -backend-config="bucket=${BUCKET_NAME}" -backend-config="prefix=terraform-state"

      - name: Terraform Plan (Dynamic)
        working-directory: ${{ env.TF_ROOT }}
        run: |
          if [[ "${GITHUB_REF_NAME}" == "cloudstoragestage" ]]; then
            echo "Running Terraform Plan for STAGING"
            terraform plan -var-file="environments/us-east4/env_stage.tfvars"
          elif [[ "${GITHUB_REF_NAME}" == "cloudstorage" ]]; then
            echo "Running Terraform Plan for PRODUCTION"
            terraform plan -var-file="environments/us-east4/env_prod.tfvars"
          else
            echo "Branch ${GITHUB_REF_NAME} is not configured for Terraform"
            exit 1
          fi

  manual-approval:
    name: Manual Approval (staging Only)
    runs-on: ubuntu-latest
    needs: terraform-plan
    if: github.ref == 'refs/heads/cloudstoragestage'
    steps:
      - name: Require Approval
        uses: hmarr/auto-approve-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: [terraform-plan, manual-approval]
    env:
      TF_ROOT: terraform/cloudstorage
      GOOGLE_CREDENTIALS: ${{ secrets.GKE_SA_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}

      - name: Terraform Init
        working-directory: ${{ env.TF_ROOT }}
        run: |
          BUCKET_NAME="${{ vars.TF_BUCKET }}"
          if [ -z "${BUCKET_NAME}" ]; then
            BUCKET_NAME="${{ secrets.TF_BUCKET }}"
          fi
          echo "Using bucket: ${BUCKET_NAME}"
          terraform init -backend-config="bucket=${BUCKET_NAME}" -backend-config="prefix=terraform-state"

      - name: Terraform Apply (Dynamic)
        working-directory: ${{ env.TF_ROOT }}
        run: |
          if [[ "${GITHUB_REF_NAME}" == "cloudstoragestage" ]]; then
            echo "Applying Terraform for STAGING"
            terraform apply -auto-approve -var-file="environments/us-east4/env_stage.tfvars"
          elif [[ "${GITHUB_REF_NAME}" == "cloudstorage" ]]; then
            echo "Applying Terraform for PRODUCTION"
            terraform apply -auto-approve -var-file="environments/us-east4/env_prod.tfvars"
          else
            echo "Branch ${GITHUB_REF_NAME} is not configured for Terraform"
            exit 1
          fi
