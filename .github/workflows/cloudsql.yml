name: Terraform CloudSQL Deployment

on:
  push:
    branches:
      - cloudsql
    paths:
      - 'terraform/cloudsql/**'
      - 'terraform/modules/**'
      - '.github/workflows/terraform-cloudsql.yml'
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'terraform/cloudsql/**'
      - 'terraform/modules/**'
      - '.github/workflows/terraform-cloudsql.yml'

env:
  TF_VAR_project_id: ${{ secrets.GKE_PROJECT }}
  GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [stage, prod]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ~1.5.0

      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}
          export_default_credentials: true

      - name: Terraform Init
        working-directory: ./terraform/cloudsql
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
            -backend-config="prefix=cloudsql/${{ matrix.environment }}"

      - name: Terraform Validate
        working-directory: ./terraform/cloudsql
        run: terraform validate

      - name: Terraform Format Check
        working-directory: ./terraform/cloudsql
        run: terraform fmt -check

      - name: Terraform Plan
        working-directory: ./terraform/cloudsql
        run: |
          terraform plan \
            -var-file="environments/us-east4/env_${{ matrix.environment }}.tfvars" \
            -out=tfplan_${{ matrix.environment }}

      - name: Save Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ matrix.environment }}
          path: terraform/cloudsql/tfplan_${{ matrix.environment }}
          retention-days: 5

  terraform-apply-stage:
    name: Terraform Apply (Stage)
    runs-on: ubuntu-latest
    needs: terraform-plan
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    environment: stage
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ~1.5.0

      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          export_default_credentials: true

      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan-stage
          path: terraform/cloudsql/

      - name: Terraform Init
        working-directory: ./terraform/cloudsql
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
            -backend-config="prefix=cloudsql/stage"

      - name: Terraform Apply
        working-directory: ./terraform/cloudsql
        run: terraform apply tfplan_stage

  terraform-apply-prod:
    name: Terraform Apply (Production)
    runs-on: ubuntu-latest
    needs: terraform-plan
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ~1.5.0

      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}
          export_default_credentials: true

      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan-prod
          path: terraform/cloudsql/

      - name: Terraform Init
        working-directory: ./terraform/cloudsql
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
            -backend-config="prefix=cloudsql/prod"

      - name: Terraform Apply
        working-directory: ./terraform/cloudsql
        run: terraform apply tfplan_prod

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: terraform-plan
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: terraform/
          quiet: true
          soft_fail: true
          framework: terraform
          output_format: sarif
          output_file_path: reports/results.sarif

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: reports/results.sarif
